LIBREPILOT INSTALLATION STEPS:
STEP1: Run the following command to install ROS packages
sudo apt-get install build-essential curl ccache debhelper git-core git-doc flex graphviz bison libudev-dev libusb-1.0-0-dev libsdl1.2-dev python libopenscenegraph-dev qt5-default qttools5-dev-tools libqt5svg5-dev qtdeclarative5-dev qml-module-qtquick-controls libqt5serialport5-dev qtmultimedia5-dev qtscript5-dev libqt5opengl5-dev qml-module-qtquick-controls qml-module-qtquick-dialogs qml-module-qtquick-xmllistmodel qml-module-qtquick-localstorage qml-module-qtquick-particles2 qml-module-qtquick-window2 qml-module-qtquick2 libosgearth-dev openscenegraph-plugin-osgearth

STEP 2: Run the following command to install 32 bit glibc for ARM toolchain
sudo apt-get install libc6-i386

STEP 3: Install gcc 7 and g++ 7 and make them default. To set up multiple versions of gcc and g++ and to learn how to manage them follow the steps presented here (https://linuxconfig.org/how-to-switch-between-multiple-gcc-and-g-compiler-versions-on-ubuntu-20-04-lts-focal-fossa)

STEP 4: Make gcc-7 and g++-7 default by running the following commands:
sudo update-alternatives --config gcc
sudo update-alternatives --config g++

STEP 5: Run the following make commands to build the gcs and required ressources as they are specified below (consider option -jN where N is the number of parallel threads allowed. This speeds up the process.):
make arm_sdk_install
make fw_resource
make qt_sdk_install
make fw_simposix
make gcs

It may happen that one or several packages are missing. If this happens, install the missing packages and run command make all_clean before you restart STEP 6.

STEP 6: Run the simposix controller in a separate terminal window by executing the following command in the LibrePilot folder:
./build/firmware/fw_simposix/fw_simposix.elf 0

STEP 7: Run the gcs in a separate terminal window by executing the following commadn in the LibrePilot folder:
./build/librepilot-gcs_release/bin/librepilot-gcs

STEP 8: Set up the gcs:
In the gcs window go to Tools --> Options --> IP Network Telemetry 
Set Host Name/Number to localhost
Set Port to 9000
Set bullet point to UDP connection



STEP 9: Set default settings for gcs
In the gcs window go to File --> GCS Settings Import / Export --> Import and select the file gcs_settings.xml in folder other_files 
Restart the gcs, see step 8. 

STEP 10: Connect simposix controller
In the gcs window in the lower right corner select localhost and click on the button Connect. Wait a few secons until a connection has been established.

STEP 11: Set UAV setting
In the gcs window go to File --> Import UAV Settings and select the the file iris_settings.uav in the folder other_files. Click on Save to board.

Now everything is set up. Step 11 needs to be executed everytime the gcs is started.
















